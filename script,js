// ‚úÖ 1. Mensaje al hacer clic en cualquier bot√≥n (ya lo ten√≠as)
document.querySelectorAll("button, .btn").forEach(btn => {
  btn.addEventListener("click", () => {
    alert("Pronto se habilitar√° el pago autom√°tico. Cont√°ctanos por WhatsApp para comprar.");
  });
});

// ‚úÖ 2. Animaciones al hacer scroll (fade in a las tarjetas)
document.addEventListener("DOMContentLoaded", () => {
  const elements = document.querySelectorAll('.product-card');

  const observer = new IntersectionObserver(entries => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('visible');
        observer.unobserve(entry.target);
      }
    });
  });

  elements.forEach(el => observer.observe(el));
});

// ‚úÖ 3. Dark Mode toggle
const toggle = document.getElementById('dark-toggle');
if (toggle) {
  toggle.addEventListener('click', () => {
    document.body.classList.toggle('dark-mode');
    toggle.innerText = document.body.classList.contains('dark-mode') ? '‚òÄÔ∏è' : 'üåô';
  });
}

// ‚úÖ 4. Contador animado de entregas
function animateCounter(id, end, duration) {
  let start = 0;
  const stepTime = Math.abs(Math.floor(duration / end));
  const obj = document.getElementById(id);
  if (!obj) return;

  const timer = setInterval(() => {
    start++;
    obj.innerText = start.toLocaleString(); // separador de miles
    if (start >= end) clearInterval(timer);
  }, stepTime);
}
animateCounter("counter", 1200, 1000);

// ‚úÖ 5. Copiar WhatsApp al portapapeles
function copyText(text) {
  navigator.clipboard.writeText(text).then(() => {
    alert("N√∫mero copiado al portapapeles ‚úÖ");
  }).catch(err => {
    console.error("Error al copiar:", err);
  });
}
document.addEventListener('DOMContentLoaded', () => {
  const supportBtn = document.getElementById('support-btn');
  const chat = document.getElementById('support-chat');
  const closeChatBtn = document.getElementById('close-chat');
  const chatMessages = document.getElementById('chat-messages');
  const chatOptions = document.getElementById('chat-options');

  // Conversaci√≥n predeterminada
  const conversation = {
    start: {
      message: 'Hola üëã, ¬øen qu√© podemos ayudarte hoy?',
      options: [
        { text: 'Problemas con compra', next: 'compra' },
        { text: 'Dudas sobre producto', next: 'producto' },
        { text: 'Contacto directo', next: 'contacto' },
      ]
    },
    compra: {
      message: '¬øQu√© problema tienes con la compra?',
      options: [
        { text: 'No recib√≠ mi pedido', next: 'pedido' },
        { text: 'Quiero cancelar una orden', next: 'cancelar' },
        { text: 'Volver al inicio', next: 'start' },
      ]
    },
    producto: {
      message: '¬øSobre qu√© producto tienes dudas?',
      options: [
        { text: 'Discord Nitro', next: 'nitro' },
        { text: 'Server Boost', next: 'boost' },
        { text: 'Volver al inicio', next: 'start' },
      ]
    },
    contacto: {
      message: 'Puedes contactarnos v√≠a WhatsApp haciendo clic aqu√≠:',
      options: [
        { text: 'Abrir WhatsApp', next: 'end', action: () => {
          window.open('https://wa.me/1234567890', '_blank');
        }},
        { text: 'Volver al inicio', next: 'start' },
      ]
    },
    pedido: {
      message: 'Por favor espera 24 horas, si no recibes tu pedido despu√©s de ese tiempo, cont√°ctanos.',
      options: [
        { text: 'Volver al inicio', next: 'start' }
      ]
    },
    cancelar: {
      message: 'Para cancelar una orden, env√≠anos tu n√∫mero de pedido por WhatsApp.',
      options: [
        { text: 'Abrir WhatsApp', next: 'end', action: () => {
          window.open('https://wa.me/1234567890', '_blank');
        }},
        { text: 'Volver al inicio', next: 'start' },
      ]
    },
    nitro: {
      message: 'El Discord Nitro te da muchas ventajas, ¬øquieres saber m√°s?',
      options: [
        { text: 'S√≠, m√°s info', next: 'infoNitro' },
        { text: 'Volver al inicio', next: 'start' },
      ]
    },
    boost: {
      message: 'El Server Boost mejora tu servidor. ¬øQuieres saber precios?',
      options: [
        { text: 'S√≠, precios', next: 'preciosBoost' },
        { text: 'Volver al inicio', next: 'start' },
      ]
    },
    infoNitro: {
      message: 'Discord Nitro ofrece emojis personalizados, mejor calidad y m√°s. ¬øQuieres comprar?',
      options: [
        { text: 'S√≠, comprar', next: 'contacto' },
        { text: 'Volver al inicio', next: 'start' },
      ]
    },
    preciosBoost: {
      message: 'Server Boosts desde $3.99 al mes. ¬øQuieres comprar?',
      options: [
        { text: 'S√≠, comprar', next: 'contacto' },
        { text: 'Volver al inicio', next: 'start' },
      ]
    },
    end: {
      message: 'Gracias por contactarnos. ¬°Que tengas un buen d√≠a! üòä',
      options: []
    }
  };

  // Mostrar el chat u ocultarlo
  supportBtn.addEventListener('click', () => {
    chat.classList.toggle('hidden');
    if (!chat.classList.contains('hidden')) {
      startChat();
    }
  });

  closeChatBtn.addEventListener('click', () => {
    chat.classList.add('hidden');
  });

  // Funci√≥n para mostrar un mensaje del bot
  function addBotMessage(text) {
    const msg = document.createElement('div');
    msg.classList.add('chat-message', 'bot-message');
    msg.textContent = text;
    chatMessages.appendChild(msg);
    chatMessages.scrollTop = chatMessages.scrollHeight;
  }

  // Funci√≥n para mostrar una opci√≥n seleccionable
  function addOptionButton(text, onClick) {
    const btn = document.createElement('button');
    btn.textContent = text;
    btn.addEventListener('click', onClick);
    chatOptions.appendChild(btn);
  }

  // Limpiar opciones y mensajes si quieres (pero en este caso solo opciones)
  function clearOptions() {
    chatOptions.innerHTML = '';
  }

  // Funci√≥n para manejar cada paso de la conversaci√≥n
  function handleStep(stepKey) {
    clearOptions();
    if (!conversation[stepKey]) return;
    const step = conversation[stepKey];
    addBotMessage(step.message);

    if (step.options.length === 0) {
      // Finalizar chat si no hay opciones
      addOptionButton('Cerrar chat', () => {
        chat.classList.add('hidden');
        chatMessages.innerHTML = '';
        clearOptions();
      });
      return;
    }

    step.options.forEach(opt => {
      addOptionButton(opt.text, () => {
        addUserMessage(opt.text);
        if (opt.action) opt.action();
        chatMessages.scrollTop = chatMessages.scrollHeight;
        chatOptions.innerHTML = '';
        setTimeout(() => handleStep(opt.next), 700);
      });
    });
  }

  // Mostrar mensaje usuario
  function addUserMessage(text) {
    const msg = document.createElement('div');
    msg.classList.add('chat-message', 'user-message');
    msg.textContent = text;
    chatMessages.appendChild(msg);
    chatMessages.scrollTop = chatMessages.scrollHeight;
  }

  // Iniciar chat
  function startChat() {
    chatMessages.innerHTML = '';
    clearOptions();
    handleStep('start');
  }
});
const supportBtn = document.getElementById('support-btn'); // ID de tu bot√≥n soporte
const supportChat = document.getElementById('support-chat');
const closeChatBtn = document.getElementById('close-chat');
const chatBody = document.getElementById('chat-body');

supportBtn.addEventListener('click', () => {
  supportChat.classList.toggle('hidden');
});

closeChatBtn.addEventListener('click', () => {
  supportChat.classList.add('hidden');
});

chatBody.addEventListener('click', e => {
  if (e.target.classList.contains('chat-option')) {
    const answer = e.target.getAttribute('data-answer');
    const response = document.createElement('div');
    response.classList.add('chat-message');
    response.textContent = answer;
    chatBody.appendChild(response);
    chatBody.scrollTop = chatBody.scrollHeight;
  }
});
document.addEventListener('DOMContentLoaded', () => {
  const supportBtn = document.getElementById('support-btn');
  const chat = document.getElementById('support-chat');
  const closeChatBtn = document.getElementById('close-chat');
  const chatMessages = document.getElementById('chat-messages');
  const chatOptions = document.getElementById('chat-options');

  // Conversaci√≥n predeterminada
  const conversation = {
    start: {
      message: 'Hola üëã, ¬øen qu√© podemos ayudarte hoy?',
      options: [
        { text: 'Problemas con compra', next: 'compra' },
        { text: 'Dudas sobre producto', next: 'producto' },
        { text: 'Contacto directo', next: 'contacto' },
      ]
    },
    compra: {
      message: '¬øQu√© problema tienes con la compra?',
      options: [
        { text: 'No recib√≠ mi pedido', next: 'pedido' },
        { text: 'Quiero cancelar una orden', next: 'cancelar' },
        { text: 'Volver al inicio', next: 'start' },
      ]
    },
    producto: {
      message: '¬øSobre qu√© producto tienes dudas?',
      options: [
        { text: 'Discord Nitro', next: 'nitro' },
        { text: 'Server Boost', next: 'boost' },
        { text: 'Volver al inicio', next: 'start' },
      ]
    },
    contacto: {
      message: 'Puedes contactarnos v√≠a WhatsApp haciendo clic aqu√≠:',
      options: [
        { text: 'Abrir WhatsApp', next: 'end', action: () => {
          window.open('https://wa.me/1234567890', '_blank');
        }},
        { text: 'Volver al inicio', next: 'start' },
      ]
    },
    pedido: {
      message: 'Por favor espera 24 horas, si no recibes tu pedido despu√©s de ese tiempo, cont√°ctanos.',
      options: [
        { text: 'Volver al inicio', next: 'start' }
      ]
    },
    cancelar: {
      message: 'Para cancelar una orden, env√≠anos tu n√∫mero de pedido por WhatsApp.',
      options: [
        { text: 'Abrir WhatsApp', next: 'end', action: () => {
          window.open('https://wa.me/1234567890', '_blank');
        }},
        { text: 'Volver al inicio', next: 'start' },
      ]
    },
    nitro: {
      message: 'El Discord Nitro te da muchas ventajas, ¬øquieres saber m√°s?',
      options: [
        { text: 'S√≠, m√°s info', next: 'infoNitro' },
        { text: 'Volver al inicio', next: 'start' },
      ]
    },
    boost: {
      message: 'El Server Boost mejora tu servidor. ¬øQuieres saber precios?',
      options: [
        { text: 'S√≠, precios', next: 'preciosBoost' },
        { text: 'Volver al inicio', next: 'start' },
      ]
    },
    infoNitro: {
      message: 'Discord Nitro ofrece emojis personalizados, mejor calidad y m√°s. ¬øQuieres comprar?',
      options: [
        { text: 'S√≠, comprar', next: 'contacto' },
        { text: 'Volver al inicio', next: 'start' },
      ]
    },
    preciosBoost: {
      message: 'Server Boosts desde $3.99 al mes. ¬øQuieres comprar?',
      options: [
        { text: 'S√≠, comprar', next: 'contacto' },
        { text: 'Volver al inicio', next: 'start' },
      ]
    },
    end: {
      message: 'Gracias por contactarnos. ¬°Que tengas un buen d√≠a! üòä',
      options: []
    }
  };

  // Mostrar el chat u ocultarlo
  supportBtn.addEventListener('click', () => {
    chat.classList.toggle('hidden');
    if (!chat.classList.contains('hidden')) {
      startChat();
    }
  });

  closeChatBtn.addEventListener('click', () => {
    chat.classList.add('hidden');
  });

  // Funci√≥n para mostrar un mensaje del bot
  function addBotMessage(text) {
    const msg = document.createElement('div');
    msg.classList.add('chat-message', 'bot-message');
    msg.textContent = text;
    chatMessages.appendChild(msg);
    chatMessages.scrollTop = chatMessages.scrollHeight;
  }

  // Funci√≥n para mostrar una opci√≥n seleccionable
  function addOptionButton(text, onClick) {
    const btn = document.createElement('button');
    btn.textContent = text;
    btn.addEventListener('click', onClick);
    chatOptions.appendChild(btn);
  }

  // Limpiar opciones y mensajes si quieres (pero en este caso solo opciones)
  function clearOptions() {
    chatOptions.innerHTML = '';
  }

  // Funci√≥n para manejar cada paso de la conversaci√≥n
  function handleStep(stepKey) {
    clearOptions();
    if (!conversation[stepKey]) return;
    const step = conversation[stepKey];
    addBotMessage(step.message);

    if (step.options.length === 0) {
      // Finalizar chat si no hay opciones
      addOptionButton('Cerrar chat', () => {
        chat.classList.add('hidden');
        chatMessages.innerHTML = '';
        clearOptions();
      });
      return;
    }

    step.options.forEach(opt => {
      addOptionButton(opt.text, () => {
        addUserMessage(opt.text);
        if (opt.action) opt.action();
        chatMessages.scrollTop = chatMessages.scrollHeight;
        chatOptions.innerHTML = '';
        setTimeout(() => handleStep(opt.next), 700);
      });
    });
  }

  // Mostrar mensaje usuario
  function addUserMessage(text) {
    const msg = document.createElement('div');
    msg.classList.add('chat-message', 'user-message');
    msg.textContent = text;
    chatMessages.appendChild(msg);
    chatMessages.scrollTop = chatMessages.scrollHeight;
  }

  // Iniciar chat
  function startChat() {
    chatMessages.innerHTML = '';
    clearOptions();
    handleStep('start');
  }
});
// Suponiendo que tienes un contenedor con id 'contenido-principal'
const contenidoPrincipal = document.getElementById('contenido-principal');

// Funci√≥n para mostrar el contenido de Ropa y armas personalizadas con im√°genes
function mostrarRopaArmas() {
  contenidoPrincipal.innerHTML = `
    <h2>Ropa y armas personalizadas</h2>
    <p>Aqu√≠ puedes ver nuestras opciones de ropa y armas personalizadas.</p>
    <div class="productos">
      <div class="producto">
        <img src="imagenes/camisa.jpg" alt="Camisa personalizada" width="200" />
        <p>Camisa personalizada</p>
      </div>
      <div class="producto">
        <img src="imagenes/arma.jpg" alt="Arma personalizada" width="200" />
        <p>Arma personalizada</p>
      </div>
    </div>
  `;
}

// Funci√≥n para mostrar el contenido principal (por ejemplo, inicio o default)
function mostrarInicio() {
  contenidoPrincipal.innerHTML = `
    <h2>Bienvenido</h2>
    <p>Contenido principal inicial aqu√≠...</p>
  `;
}

// Escuchar el bot√≥n que activa "Ropa y armas perso"
document.getElementById('btn-ropa-armas').addEventListener('click', () => {
  mostrarRopaArmas();
});
function toggleSection(id) {
  const section = document.getElementById(id);
  section.classList.toggle('hidden');
}
function toggleSection(id) {
  const section = document.getElementById(id);
  section.classList.toggle('hidden');
}

